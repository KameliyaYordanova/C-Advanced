using System;
using System.Collections.Generic;
using System.Linq;

namespace _8.Bombs
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());
            int[,] matrix = new int[n, n];

            FieldMethod(matrix);

            string[] coordinatesForIndex = Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries);

            foreach (string element in coordinatesForIndex)
            {
                int[] indexs = element.Split(",", StringSplitOptions.RemoveEmptyEntries)
                    .Select(int.Parse)
                    .ToArray();

                int currentBombRow = indexs[0];
                int currentBombCol = indexs[1];
                int currentBomb = matrix[currentBombRow, currentBombCol];

                for (int row = currentBombRow - 1; row <= currentBombRow + 1; row++)
                {
                    for (int col = currentBombCol - 1; col <= currentBombCol + 1; col++)
                    {
                        if (row >= 0 && row < matrix.GetLength(0) && col >= 0 && col < matrix.GetLength(1))
                        {
                            if (matrix[row, col] <= 0 || currentBomb < 0)
                            {
                                continue;
                            }

                            matrix[row, col] -= currentBomb;
                        }
                    }
                }
            }

            int aliveCells = 0;
            int sumAliveCells = 0;

            foreach (int cell in matrix)
            {
                if (cell > 0)
                {
                    aliveCells++;
                    sumAliveCells += cell;
                }
            }

            Console.WriteLine($"Alive cells: {aliveCells}");
            Console.WriteLine($"Sum: {sumAliveCells}");


            for (int row = 0; row < matrix.GetLength(0); row++)
            {
                for (int col = 0; col < matrix.GetLength(1); col++)
                {
                    Console.Write(matrix[row, col] + " ");
                }
                Console.WriteLine();

            }

        }

        private static void FieldMethod(int[,] matrix)
        {
            for (int row = 0; row < matrix.GetLength(0); row++)
            {
                int[] currentRow = Console.ReadLine().Split(" ").Select(int.Parse).ToArray();

                for (int col = 0; col < matrix.GetLength(1); col++)
                {
                    matrix[row, col] = currentRow[col];
                }
            }
        }
    }
}
